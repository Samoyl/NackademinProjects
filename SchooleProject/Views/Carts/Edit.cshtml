@model SchooleProject.Models.CartItem

@{
    ViewData["Title"] = "Edit";
}

<h2>Edit</h2>

<h4>Cart</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="dishItem.DishId" />

            <div class="form-group">
                <label asp-for="dishItem.Name" class="control-label"></label>
                @*<output asp-for="dishItem.Name" class="form-control" />*@
                <p>@Model.dishItem.Name</p>
                @*<span asp-validation-for="dishItem.Name" class="text-danger"></span>*@
            </div>
            <div class="form-group">
                <label asp-for="dishItem.Price" class="control-label"></label>
                @*<output asp-for="dishItem.Price" class="form-control" />*@
                <p>@Model.price</p>
                @*<span asp-validation-for="dishItem.Price" class="text-danger"></span>*@
            </div>

            <div class="form-group">
                @foreach (var item in Model.Ingredients)
                {
                    var check = Model.ExtraIngredients.Any(x => x.IngredientId == item.IngredientId) ? "checked" : "";
                    <input type="checkbox" name="@item.IngredientId" @check />
                    <span asp-for="@item.Name">@item.Name</span>
                }
            </div>

            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts{
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}